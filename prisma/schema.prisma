// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String?
  username  String   @unique
  email     String   @unique
  password  String
  bio       String?
  avatar    String?
  photos    Photo[]
  likes     Like[]
  followers User[]   @relation("FollowRelation", references: [id])
  following User[]   @relation("FollowRelation", references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Photo {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  likes     Like[]
  hashtags  Hashtag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  hashtag   String   @unique
  photos    Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id]) //prisma only Not DB
  user      User     @relation(fields: [userId], references: [id])
  photoId   Int //DB에 저장됨
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //좋아요하는 사진-유저가 중복되면 DB에 저장시키지 않음. 라이크에 연결되는 두 가지 필드는 모두 유니크 해야 함
  @@unique([photoId, userId])
}
